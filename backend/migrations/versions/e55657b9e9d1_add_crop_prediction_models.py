"""Add crop prediction models

Revision ID: e55657b9e9d1
Revises: 
Create Date: 2025-09-26 14:50:55.241051

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e55657b9e9d1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crop_recommendations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('nitrogen', sa.Float(), nullable=False),
    sa.Column('phosphorus', sa.Float(), nullable=False),
    sa.Column('potassium', sa.Float(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('humidity', sa.Float(), nullable=False),
    sa.Column('ph', sa.Float(), nullable=False),
    sa.Column('rainfall', sa.Float(), nullable=False),
    sa.Column('predicted_crop', sa.String(length=100), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crop_yield_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('crop', sa.String(length=100), nullable=False),
    sa.Column('season', sa.String(length=50), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('annual_rainfall', sa.Float(), nullable=False),
    sa.Column('fertilizer', sa.Float(), nullable=False),
    sa.Column('pesticide', sa.Float(), nullable=False),
    sa.Column('predicted_yield', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('transactions')
    with op.batch_alter_table('crops', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_crops_farm_id'))

    with op.batch_alter_table('disease_detections', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_disease_detections_date'))
        batch_op.drop_index(batch_op.f('idx_disease_detections_disease'))
        batch_op.drop_index(batch_op.f('idx_disease_detections_user_date'))
        batch_op.drop_index(batch_op.f('idx_disease_detections_user_id'))
        batch_op.drop_index(batch_op.f('idx_disease_severity'))
        batch_op.drop_index(batch_op.f('idx_disease_user_confidence'))

    with op.batch_alter_table('disease_scans', schema=None) as batch_op:
        batch_op.alter_column('image_data',
               existing_type=mysql.LONGBLOB(),
               type_=sa.LargeBinary(),
               existing_nullable=True)
        batch_op.alter_column('image_path',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_column('india_specific_products')

    with op.batch_alter_table('farm_ledger', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_farm_ledger_amount'))
        batch_op.drop_index(batch_op.f('idx_farm_ledger_type'))
        batch_op.drop_index(batch_op.f('idx_farm_ledger_type_date'))
        batch_op.drop_index(batch_op.f('idx_farm_ledger_user_id'))

    with op.batch_alter_table('farm_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_farm_notes_created_at'))
        batch_op.drop_index(batch_op.f('idx_farm_notes_farm_id'))

    with op.batch_alter_table('farms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_farms_user_created'))
        batch_op.drop_index(batch_op.f('idx_farms_user_id'))
        batch_op.drop_column('size')
        batch_op.drop_column('size_unit')

    with op.batch_alter_table('forum_posts', schema=None) as batch_op:
        batch_op.alter_column('flagged_reason',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('forum_replies', schema=None) as batch_op:
        batch_op.alter_column('flagged_reason',
               existing_type=mysql.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('monitored_crops', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_monitored_crops_status'))
        batch_op.drop_index(batch_op.f('idx_monitored_crops_user_id'))
        batch_op.drop_index(batch_op.f('idx_monitored_crops_user_status'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('monitored_crops', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_monitored_crops_user_status'), ['user_id', 'status'], unique=False)
        batch_op.create_index(batch_op.f('idx_monitored_crops_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_monitored_crops_status'), ['status'], unique=False)

    with op.batch_alter_table('forum_replies', schema=None) as batch_op:
        batch_op.alter_column('flagged_reason',
               existing_type=sa.String(length=200),
               type_=mysql.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('forum_posts', schema=None) as batch_op:
        batch_op.alter_column('flagged_reason',
               existing_type=sa.String(length=200),
               type_=mysql.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('farms', schema=None) as batch_op:
        batch_op.add_column(sa.Column('size_unit', mysql.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('size', mysql.FLOAT(), nullable=True))
        batch_op.create_index(batch_op.f('idx_farms_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_farms_user_created'), ['user_id', 'created_at'], unique=False)

    with op.batch_alter_table('farm_notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_farm_notes_farm_id'), ['farm_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_farm_notes_created_at'), ['created_at'], unique=False)

    with op.batch_alter_table('farm_ledger', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_farm_ledger_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_farm_ledger_type_date'), ['user_id', 'transaction_type', 'transaction_date'], unique=False)
        batch_op.create_index(batch_op.f('idx_farm_ledger_type'), ['transaction_type'], unique=False)
        batch_op.create_index(batch_op.f('idx_farm_ledger_amount'), ['amount'], unique=False)

    with op.batch_alter_table('disease_scans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('india_specific_products', mysql.TEXT(), nullable=True))
        batch_op.alter_column('image_path',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('image_data',
               existing_type=sa.LargeBinary(),
               type_=mysql.LONGBLOB(),
               existing_nullable=True)

    with op.batch_alter_table('disease_detections', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_disease_user_confidence'), ['user_id', 'confidence_score'], unique=False)
        batch_op.create_index(batch_op.f('idx_disease_severity'), ['severity'], unique=False)
        batch_op.create_index(batch_op.f('idx_disease_detections_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_disease_detections_user_date'), ['user_id', 'detected_at'], unique=False)
        batch_op.create_index(batch_op.f('idx_disease_detections_disease'), ['predicted_disease'], unique=False)
        batch_op.create_index(batch_op.f('idx_disease_detections_date'), ['detected_at'], unique=False)

    with op.batch_alter_table('crops', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_crops_farm_id'), ['farm_id'], unique=False)

    op.create_table('transactions',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', mysql.FLOAT(), nullable=False),
    sa.Column('category', mysql.VARCHAR(length=64), nullable=False),
    sa.Column('note', mysql.VARCHAR(length=128), nullable=True),
    sa.Column('transaction_type', mysql.VARCHAR(length=16), nullable=True),
    sa.Column('transaction_date', sa.DATE(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('transactions_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('crop_yield_predictions')
    op.drop_table('crop_recommendations')
    # ### end Alembic commands ###
