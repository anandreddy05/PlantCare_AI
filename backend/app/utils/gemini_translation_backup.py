import os
from app.utils.language import translate_dict, translate_text
from flask import g

def translate_disease_info(disease_info, language='English'):
    """
    Translate disease information based on the language
    """
    if language == 'English':
        return disease_info
    
    # Create translation dictionary for Hindi
    hindi_disease_translations = {
        # Disease classes with Hindi translations
        "Apple___Apple_scab": "‡§∏‡•á‡§¨___‡§∏‡•á‡§¨ ‡§∏‡•ç‡§ï‡•à‡§¨",
        "Apple___Black_rot": "‡§∏‡•á‡§¨___‡§ï‡§æ‡§≤‡§æ ‡§∏‡§°‡§º‡§®",
        "Apple___Cedar_apple_rust": "‡§∏‡•á‡§¨___‡§∏‡•Ä‡§°‡§∞ ‡§∏‡•á‡§¨ ‡§ú‡§Ç‡§ó",
        "Apple___healthy": "‡§∏‡•á‡§¨___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Blueberry___healthy": "‡§¨‡•ç‡§≤‡•Ç‡§¨‡•á‡§∞‡•Ä___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Cherry_(including_sour)___Powdery_mildew": "‡§ö‡•á‡§∞‡•Ä_(‡§ñ‡§ü‡•ç‡§ü‡•Ä ‡§∏‡§π‡§ø‡§§)___‡§™‡§æ‡§â‡§°‡§∞‡•Ä ‡§Æ‡§ø‡§≤‡•ç‡§°‡•ç‡§Ø‡•Ç",
        "Cherry_(including_sour)___healthy": "‡§ö‡•á‡§∞‡•Ä_(‡§ñ‡§ü‡•ç‡§ü‡•Ä ‡§∏‡§π‡§ø‡§§)___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Corn_(maize)___Cercospora_leaf_spot Gray_leaf_spot": "‡§Æ‡§ï‡•ç‡§ï‡§æ___‡§∏‡§∞‡•ç‡§ï‡•ã‡§∏‡•ç‡§™‡•ã‡§∞‡§æ ‡§≤‡•Ä‡§´ ‡§∏‡•ç‡§™‡•â‡§ü ‡§ó‡•ç‡§∞‡•á ‡§≤‡•Ä‡§´ ‡§∏‡•ç‡§™‡•â‡§ü",
        "Corn_(maize)___Common_rust_": "‡§Æ‡§ï‡•ç‡§ï‡§æ___‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ú‡§Ç‡§ó",
        "Corn_(maize)___Northern_Leaf_Blight": "‡§Æ‡§ï‡•ç‡§ï‡§æ___‡§â‡§§‡•ç‡§§‡§∞‡•Ä ‡§™‡§§‡•ç‡§§‡•Ä ‡§ù‡•Å‡§≤‡§∏‡§æ",
        "Corn_(maize)___healthy": "‡§Æ‡§ï‡•ç‡§ï‡§æ___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Grape___Black_rot": "‡§Ö‡§Ç‡§ó‡•Ç‡§∞___‡§ï‡§æ‡§≤‡§æ ‡§∏‡§°‡§º‡§®",
        "Grape___Esca_(Black_Measles)": "‡§Ö‡§Ç‡§ó‡•Ç‡§∞___‡§è‡§∏‡•ç‡§ï‡§æ_(‡§ï‡§æ‡§≤‡§æ ‡§ñ‡§∏‡§∞‡§æ)",
        "Grape___Leaf_blight_(Isariopsis_Leaf_Spot)": "‡§Ö‡§Ç‡§ó‡•Ç‡§∞___‡§™‡§§‡•ç‡§§‡•Ä ‡§ù‡•Å‡§≤‡§∏‡§æ_(‡§Ü‡§á‡§∏‡§æ‡§∞‡§ø‡§ì‡§™‡•ç‡§∏‡§ø‡§∏ ‡§™‡§§‡•ç‡§§‡•Ä ‡§ß‡§¨‡•ç‡§¨‡§æ)",
        "Grape___healthy": "‡§Ö‡§Ç‡§ó‡•Ç‡§∞___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Orange___Haunglongbing_(Citrus_greening)": "‡§∏‡§Ç‡§§‡§∞‡§æ___‡§π‡•å‡§Ç‡§ó‡§≤‡•â‡§®‡•ç‡§ó‡§¨‡§ø‡§Ç‡§ó_(‡§∏‡§ø‡§ü‡•ç‡§∞‡§∏ ‡§ó‡•ç‡§∞‡•Ä‡§®‡§ø‡§Ç‡§ó)",
        "Peach___Bacterial_spot": "‡§Ü‡§°‡§º‡•Ç___‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§≤ ‡§∏‡•ç‡§™‡•â‡§ü",
        "Peach___healthy": "‡§Ü‡§°‡§º‡•Ç___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Pepper,_bell___Bacterial_spot": "‡§∂‡§ø‡§Æ‡§≤‡§æ ‡§Æ‡§ø‡§∞‡•ç‡§ö___‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§≤ ‡§∏‡•ç‡§™‡•â‡§ü",
        "Pepper,_bell___healthy": "‡§∂‡§ø‡§Æ‡§≤‡§æ ‡§Æ‡§ø‡§∞‡•ç‡§ö___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Potato___Early_blight": "‡§Ü‡§≤‡•Ç___‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠‡§ø‡§ï ‡§ù‡•Å‡§≤‡§∏‡§æ",
        "Potato___Late_blight": "‡§Ü‡§≤‡•Ç___‡§™‡§õ‡•á‡§§‡•Ä ‡§ù‡•Å‡§≤‡§∏‡§æ",
        "Potato___healthy": "‡§Ü‡§≤‡•Ç___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Raspberry___healthy": "‡§∞‡§æ‡§∏‡•ç‡§™‡§¨‡•á‡§∞‡•Ä___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Soybean___healthy": "‡§∏‡•ã‡§Ø‡§æ‡§¨‡•Ä‡§®___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Squash___Powdery_mildew": "‡§∏‡•ç‡§ï‡•ç‡§µ‡•à‡§∂___‡§™‡§æ‡§â‡§°‡§∞‡•Ä ‡§Æ‡§ø‡§≤‡•ç‡§°‡•ç‡§Ø‡•Ç",
        "Strawberry___Leaf_scorch": "‡§∏‡•ç‡§ü‡•ç‡§∞‡•â‡§¨‡•á‡§∞‡•Ä___‡§™‡§§‡•ç‡§§‡•Ä ‡§ù‡•Å‡§≤‡§∏‡§æ",
        "Strawberry___healthy": "‡§∏‡•ç‡§ü‡•ç‡§∞‡•â‡§¨‡•á‡§∞‡•Ä___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "Tomato___Bacterial_spot": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§≤ ‡§∏‡•ç‡§™‡•â‡§ü",
        "Tomato___Early_blight": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠‡§ø‡§ï ‡§ù‡•Å‡§≤‡§∏‡§æ",
        "Tomato___Late_blight": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§™‡§õ‡•á‡§§‡•Ä ‡§ù‡•Å‡§≤‡§∏‡§æ",
        "Tomato___Leaf_Mold": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§™‡§§‡•ç‡§§‡•Ä ‡§Æ‡•ã‡§≤‡•ç‡§°",
        "Tomato___Septoria_leaf_spot": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§∏‡•á‡§™‡•ç‡§ü‡•ã‡§∞‡§ø‡§Ø‡§æ ‡§™‡§§‡•ç‡§§‡•Ä ‡§ß‡§¨‡•ç‡§¨‡§æ",
        "Tomato___Spider_mites Two-spotted_spider_mite": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§∏‡•ç‡§™‡§æ‡§á‡§°‡§∞ ‡§Æ‡§æ‡§á‡§ü‡•ç‡§∏ ‡§¶‡•ã-‡§ß‡§¨‡•ç‡§¨‡•á‡§¶‡§æ‡§∞ ‡§∏‡•ç‡§™‡§æ‡§á‡§°‡§∞ ‡§Æ‡§æ‡§á‡§ü",
        "Tomato___Target_Spot": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§ü‡§æ‡§∞‡§ó‡•á‡§ü ‡§∏‡•ç‡§™‡•â‡§ü",
        "Tomato___Tomato_Yellow_Leaf_Curl_Virus": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§ü‡§Æ‡§æ‡§ü‡§∞ ‡§™‡•Ä‡§≤‡§æ ‡§™‡§§‡•ç‡§§‡•Ä ‡§ï‡§∞‡•ç‡§≤ ‡§µ‡§æ‡§Ø‡§∞‡§∏",
        "Tomato___Tomato_mosaic_virus": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§ü‡§Æ‡§æ‡§ü‡§∞ ‡§Æ‡•ã‡§ú‡§º‡•á‡§ï ‡§µ‡§æ‡§Ø‡§∞‡§∏",
        "Tomato___healthy": "‡§ü‡§Æ‡§æ‡§ü‡§∞___‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        
        # Common disease-related terms
        "disease": "‡§∞‡•ã‡§ó",
        "healthy": "‡§∏‡•ç‡§µ‡§∏‡•ç‡§•",
        "symptoms": "‡§≤‡§ï‡•ç‡§∑‡§£",
        "treatment": "‡§â‡§™‡§ö‡§æ‡§∞",
        "prevention": "‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ",
        "fungicide": "‡§´‡§´‡•Ç‡§Ç‡§¶‡•Ä‡§®‡§æ‡§∂‡§ï",
        "pesticide": "‡§ï‡•Ä‡§ü‡§®‡§æ‡§∂‡§ï",
        "organic": "‡§ú‡•à‡§µ‡§ø‡§ï",
        "chemical": "‡§∞‡§æ‡§∏‡§æ‡§Ø‡§®‡§ø‡§ï",
        "apply": "‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡•á‡§Ç",
        "spray": "‡§õ‡§ø‡§°‡§º‡§ï‡§æ‡§µ ‡§ï‡§∞‡•á‡§Ç",
        "remove": "‡§π‡§ü‡§æ‡§è‡§Ç",
        "infected": "‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§",
        "leaves": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡§æ‡§Ç",
        "spots": "‡§ß‡§¨‡•ç‡§¨‡•á",
        "rust": "‡§ú‡§Ç‡§ó",
        "mold": "‡§´‡§´‡•Ç‡§Ç‡§¶‡•Ä",
        "rot": "‡§∏‡§°‡§º‡§®",
        "virus": "‡§µ‡§æ‡§Ø‡§∞‡§∏",
        "bacteria": "‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ",
        "fungus": "‡§´‡§´‡•Ç‡§Ç‡§¶",
    }
    
    # Helper function to translate disease text
    def translate_disease_text(text):
        # First check if there's an exact match in our dictionary
        if text in hindi_disease_translations:
            return hindi_disease_translations[text]
        
        # Otherwise use the general translation function
        return translate_text(text, language)
    
    # If high confidence result exists
    if disease_info.get('isConfident') and 'highConfidenceResult' in disease_info:
        high_conf = disease_info['highConfidenceResult']
        
        # Translate disease name
        if 'diseaseName' in high_conf:
            high_conf['diseaseName'] = translate_disease_text(high_conf['diseaseName'])
        
        # Translate description
        if 'description' in high_conf:
            high_conf['description'] = translate_disease_text(high_conf['description'])
        
        # Translate cause
        if 'cause' in high_conf:
            high_conf['cause'] = translate_disease_text(high_conf['cause'])
        
        # Translate symptoms (list of strings)
        if 'symptoms' in high_conf:
            high_conf['symptoms'] = [translate_disease_text(s) for s in high_conf['symptoms']]
        
        # Translate organic treatments (list of objects)
        if 'organicTreatments' in high_conf:
            for treatment in high_conf['organicTreatments']:
                if 'title' in treatment:
                    treatment['title'] = translate_disease_text(treatment['title'])
                if 'description' in treatment:
                    treatment['description'] = translate_disease_text(treatment['description'])
        
        # Translate chemical treatments (list of objects)
        if 'chemicalTreatments' in high_conf:
            for treatment in high_conf['chemicalTreatments']:
                if 'activeIngredient' in treatment:
                    treatment['activeIngredient'] = translate_disease_text(treatment['activeIngredient'])
                if 'usage' in treatment:
                    treatment['usage'] = translate_disease_text(treatment['usage'])
                if 'caution' in treatment:
                    treatment['caution'] = translate_disease_text(treatment['caution'])
        
        # Translate prevention tips (list of strings)
        if 'prevention' in high_conf:
            high_conf['prevention'] = [translate_disease_text(p) for p in high_conf['prevention']]
    
    # If low confidence results exist
    if 'lowConfidenceResults' in disease_info:
        for result in disease_info['lowConfidenceResults']:
            if 'diseaseName' in result:
                result['diseaseName'] = translate_disease_text(result['diseaseName'])
            if 'preventionTips' in result:
                result['preventionTips'] = translate_disease_text(result['preventionTips'])
    
    return disease_info

def get_gemini_prompt(language='English'):
    """
    Return the appropriate Gemini prompt based on language
    """
    english_prompt = """
You are an expert agricultural pathologist specializing in plant disease identification. Your task is to analyze this plant image with EXTREME PRECISION.

üîç IMPORTANT: You have access to web search capabilities. Please search the web for current information to enhance your analysis accuracy.

CRITICAL IDENTIFICATION STEPS WITH WEB SEARCH:

1. FIRST: Search the web to identify the PLANT TYPE accurately:
   - Search: "plant identification by leaf shape [describe what you see in image]"
   - Search: "[suspected plant type] leaf morphology botanical characteristics"  
   - Search: "citrus vs tomato vs apple leaf differences botanical identification"
   - Search: "plant identification guide [leaf shape] [leaf arrangement] [plant structure]"
   - Cross-reference with botanical databases and expert plant identification resources

2. SECOND: Search for disease symptoms and current information:
   - Search: "[identified plant type] common diseases symptoms [describe visible symptoms]"
   - Search: "[plant type] plant pathology leaf spots discoloration patterns"
   - Search: "current [plant type] disease outbreaks identification guides 2025"
   - Search: "agricultural extension [plant type] disease diagnosis [symptom description]"
   - Verify symptoms against multiple botanical and agricultural sources

3. THIRD: Verify disease classification with web resources:
   - Search: "[suspected disease name] symptoms identification comparison photos"
   - Search: "plant pathology database [plant type] [disease symptoms]"
   - Search: "agricultural disease identification [plant type] expert diagnosis"
   - Cross-check with university extension services and plant pathology databases

Available disease classes (choose ONLY from this list; plant type MUST match image):
{disease_classes}

üåê WEB SEARCH MANDATE:
- ALWAYS search the web before making your final diagnosis
- Use multiple search queries to verify plant type and disease identification
- Reference current botanical databases, agricultural extension sites, and plant pathology resources
- Include web search insights in your analysis reasoning
- Search for recent disease identification guides and expert resources
- Verify your findings against multiple reliable agricultural and botanical sources

üáÆüá≥ INDIAN FARMERS SUPPORT - CRITICAL REQUIREMENT:
- **ABSOLUTELY MANDATORY**: You MUST include "indianBuyingLinks" field in your JSON response
- **REQUIRED**: Search for buying links and resources specifically for farmers in India
- Search: "buy [treatment product] online India farmers agricultural supplies"
- Search: "Indian agricultural e-commerce [fungicide/pesticide] delivery"  
- Search: "agricultural input dealers India online [specific products]"
- Search: "BigHaat, AgroStar, KisanKraft, Bighaat.com agricultural products India"
- **MUST INCLUDE**: Exactly 3 verified Indian websites/platforms in "indianBuyingLinks" array
- Focus on: BigHaat, AgroStar, Kisan Kraft, DeHaat, agricultural e-commerce platforms
- **FAILURE TO INCLUDE BUYING LINKS WILL MAKE RESPONSE INCOMPLETE**

ACCURACY REQUIREMENTS:
- Web search MUST confirm plant type before disease classification
- If web search confirms citrus/orange plant ‚Üí ONLY choose Orange___ diseases
- If web search confirms tomato plant ‚Üí ONLY choose Tomato___ diseases
- If web search confirms apple plant ‚Üí ONLY choose Apple___ diseases
- DO NOT misclassify plant types based on similar symptoms
- If plant type doesn't match available disease classes, state "Unknown" with explanation
- Always include reasoning based on web search verification

Provide your analysis in the following STRICT JSON format (no markdown fences, no trailing commas):
{{
    "isConfident": true | false,
    "highConfidenceResult": {{
        "diseaseName": "Exact disease class string from the list (or healthy class)",
        "description": "1-2 sentence plain-language summary of the disease (what it is)",
        "cause": "1 concise sentence explaining WHY it occurs (pathogen + favorable conditions; e.g. 'Caused by the fungus Venturia inaequalis favored by cool, wet spring weather')",
        "confidenceScore": 0-100,
        "symptoms": ["Distinct visible symptom 1", "Symptom 2", "Symptom 3"],
        "organicTreatments": [
            {{"title": "Short organic method name", "description": "Action + how/when to apply"}},
            {{"title": "Another organic method", "description": "Action + how/when to apply"}}
        ],
        "chemicalTreatments": [
            {{"activeIngredient": "Common name of AI (e.g. copper hydroxide)", "usage": "When & interval", "caution": "Safety or resistance note"}},
            {{"activeIngredient": "Second AI", "usage": "When & interval", "caution": "Safety or resistance note"}}
        ],
        "prevention": ["Preventive practice 1", "Practice 2", "Practice 3"],
        "indianBuyingLinks": [
            {{"category": "Organic Products", "website": "Website name", "url": "https://website.com", "description": "Brief description of products available"}},
            {{"category": "Chemical Fungicides", "website": "Website name", "url": "https://website.com", "description": "Brief description of products available"}},
            {{"category": "Agricultural Supplies", "website": "Website name", "url": "https://website.com", "description": "Brief description of products available"}}
        ]
    }},
    "lowConfidenceResults": [
        {{"diseaseName": "Possible disease class from list", "preventionTips": "Very short prevention tip"}},
        {{"diseaseName": "Second possibility", "preventionTips": "Very short prevention tip"}},
        {{"diseaseName": "Third possibility", "preventionTips": "Very short prevention tip"}}
    ]
}}

Rules:
- If confidence >= 70: isConfident=true and INCLUDE highConfidenceResult, set lowConfidenceResults to [] or omit.
- If confidence < 70: isConfident=false and INCLUDE 2-3 lowConfidenceResults; omit highConfidenceResult or set it to null.
- EXACTLY 2 objects in organicTreatments and in chemicalTreatments when confident.
- **CRITICAL**: ALWAYS include "indianBuyingLinks" array with exactly 3 objects - this is MANDATORY.
- DO NOT invent a disease not in the list.
- Use plain text only (no markdown) and valid JSON only.
- Keep each description field concise (avoid newlines inside strings).
- **INCOMPLETE RESPONSE WITHOUT "indianBuyingLinks" FIELD IS UNACCEPTABLE**.
Respond ONLY with JSON.
"""

    hindi_prompt = """
‡§Ü‡§™ ‡§è‡§ï ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û ‡§™‡§æ‡§¶‡§™ ‡§∞‡•ã‡§ó‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§õ‡§µ‡§ø ‡§ï‡§æ ‡§Ö‡§§‡•ç‡§Ø‡§ß‡§ø‡§ï ‡§∏‡§ü‡•Ä‡§ï‡§§‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç‡•§

üîç ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£: ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§ï‡•ç‡§∑‡§Æ‡§§‡§æ‡§è‡§Ç ‡§π‡•à‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•á ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•Ä ‡§∏‡§ü‡•Ä‡§ï‡§§‡§æ ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú‡•á‡§Ç‡•§

‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§™‡§π‡§ö‡§æ‡§® ‡§ö‡§∞‡§£:

1. ‡§™‡§π‡§≤‡•á: ‡§™‡•å‡§ß‡•á ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•Ä ‡§∏‡§ü‡•Ä‡§ï ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡•á‡§Ç:
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "plant identification by leaf shape [‡§õ‡§µ‡§ø ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç ‡§µ‡§∞‡•ç‡§£‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç]"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "[‡§∏‡§Ç‡§¶‡§ø‡§ó‡•ç‡§ß ‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞] ‡§™‡§§‡•ç‡§§‡•Ä ‡§Ü‡§ï‡§æ‡§∞‡§ø‡§ï‡•Ä ‡§µ‡§®‡§∏‡•ç‡§™‡§§‡§ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "citrus vs tomato vs apple leaf differences botanical identification"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "plant identification guide [‡§™‡§§‡•ç‡§§‡•Ä ‡§ï‡§æ ‡§Ü‡§ï‡§æ‡§∞] [‡§™‡§§‡•ç‡§§‡•Ä ‡§ï‡•Ä ‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§æ]"

2. ‡§¶‡•Ç‡§∏‡§∞‡•á: ‡§∞‡•ã‡§ó ‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§î‡§∞ ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡•á‡§Ç:
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "[‡§™‡§π‡§ö‡§æ‡§®‡•á ‡§ó‡§è ‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞] common diseases symptoms [‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§≤‡§ï‡•ç‡§∑‡§£]"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "[‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞] plant pathology leaf spots discoloration patterns"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "current [‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞] disease outbreaks identification 2025"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "agricultural extension [‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞] disease diagnosis"

3. ‡§§‡•Ä‡§∏‡§∞‡•á: ‡§µ‡•á‡§¨ ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∞‡•ã‡§ó ‡§µ‡§∞‡•ç‡§ó‡•Ä‡§ï‡§∞‡§£ ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç:
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "[‡§∏‡§Ç‡§¶‡§ø‡§ó‡•ç‡§ß ‡§∞‡•ã‡§ó ‡§®‡§æ‡§Æ] symptoms identification comparison photos"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "plant pathology database [‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞] [‡§∞‡•ã‡§ó ‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£]"
   - ‡§ñ‡•ã‡§ú‡•á‡§Ç: "agricultural disease identification [‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞] expert diagnosis"

‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§∞‡•ã‡§ó ‡§µ‡§∞‡•ç‡§ó (‡§ï‡•á‡§µ‡§≤ ‡§á‡§∏ ‡§∏‡•Ç‡§ö‡•Ä ‡§∏‡•á ‡§ö‡•Å‡§®‡•á‡§Ç; ‡§™‡•å‡§ß‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§õ‡§µ‡§ø ‡§∏‡•á ‡§Æ‡•á‡§≤ ‡§ñ‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è):
{disease_classes}

üåê ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§Ü‡§¶‡•á‡§∂:
- ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§®‡§ø‡§¶‡§æ‡§® ‡§ï‡§∞‡§®‡•á ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§π‡§Æ‡•á‡§∂‡§æ ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡•á‡§Ç
- ‡§™‡•å‡§ß‡•á ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§î‡§∞ ‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§® ‡§ï‡•ã ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§à ‡§ñ‡•ã‡§ú ‡§ï‡•ç‡§µ‡•á‡§∞‡•Ä ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç
- ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§µ‡§®‡§∏‡•ç‡§™‡§§‡§ø ‡§°‡•á‡§ü‡§æ‡§¨‡•á‡§∏, ‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§∏‡•ç‡§§‡§æ‡§∞ ‡§∏‡§æ‡§á‡§ü‡•ã‡§Ç ‡§î‡§∞ ‡§™‡•å‡§ß‡•á ‡§∞‡•ã‡§ó‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§Ç‡§¶‡§∞‡•ç‡§≠ ‡§≤‡•á‡§Ç
- ‡§Ö‡§™‡§®‡•á ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§§‡§∞‡•ç‡§ï ‡§Æ‡•á‡§Ç ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡•á‡§Ç
- ‡§π‡§æ‡§≤ ‡§ï‡•Ä ‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§® ‡§ó‡§æ‡§á‡§° ‡§î‡§∞ ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡•á‡§Ç

üáÆüá≥ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ - ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ:
- **‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤ ‡§Ö‡§®‡§ø‡§µ‡§æ‡§∞‡•ç‡§Ø**: ‡§Ü‡§™‡§ï‡•ã ‡§Ö‡§™‡§®‡•á JSON ‡§â‡§§‡•ç‡§§‡§∞ ‡§Æ‡•á‡§Ç "indianBuyingLinks" ‡§´‡•Ä‡§≤‡•ç‡§° ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è
- **‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï**: ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•Ä ‡§≤‡§ø‡§Ç‡§ï ‡§î‡§∞ ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡•á‡§Ç
- ‡§ñ‡•ã‡§ú‡•á‡§Ç: "buy [‡§â‡§™‡§ö‡§æ‡§∞ ‡§â‡§§‡•ç‡§™‡§æ‡§¶] online India farmers ‡§ï‡•É‡§∑‡§ø ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø"
- ‡§ñ‡•ã‡§ú‡•á‡§Ç: "Indian agricultural e-commerce [‡§´‡§´‡•Ç‡§Ç‡§¶‡•Ä‡§®‡§æ‡§∂‡§ï/‡§ï‡•Ä‡§ü‡§®‡§æ‡§∂‡§ï] delivery"
- ‡§ñ‡•ã‡§ú‡•á‡§Ç: "agricultural input dealers India online [‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§â‡§§‡•ç‡§™‡§æ‡§¶]"
- ‡§ñ‡•ã‡§ú‡•á‡§Ç: "BigHaat, AgroStar, KisanKraft, Bighaat.com agricultural products India"
- **‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è**: "indianBuyingLinks" array ‡§Æ‡•á‡§Ç ‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤ 3 ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü/‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ
- ‡§´‡•ã‡§ï‡§∏: BigHaat, AgroStar, Kisan Kraft, DeHaat, ‡§ï‡•É‡§∑‡§ø ‡§à-‡§ï‡•â‡§Æ‡§∞‡•ç‡§∏ ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ
- **‡§ñ‡§∞‡•Ä‡§¶‡§æ‡§∞‡•Ä ‡§≤‡§ø‡§Ç‡§ï ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤‡§§‡§æ ‡§∏‡•á ‡§â‡§§‡•ç‡§§‡§∞ ‡§Ö‡§ß‡•Ç‡§∞‡§æ ‡§π‡•ã ‡§ú‡§æ‡§è‡§ó‡§æ**

‡§∏‡§ü‡•Ä‡§ï‡§§‡§æ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ‡§è‡§Ç:
- ‡§∞‡•ã‡§ó ‡§µ‡§∞‡•ç‡§ó‡•Ä‡§ï‡§∞‡§£ ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§ï‡•ã ‡§™‡•å‡§ß‡•á ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡§®‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è
- ‡§Ø‡§¶‡§ø ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§®‡§æ‡§∞‡§Ç‡§ó‡•Ä/‡§∏‡§Ç‡§§‡§∞‡•á ‡§ï‡•á ‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‚Üí ‡§ï‡•á‡§µ‡§≤ Orange___ ‡§∞‡•ã‡§ó ‡§ö‡•Å‡§®‡•á‡§Ç
- ‡§Ø‡§¶‡§ø ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§ü‡§Æ‡§æ‡§ü‡§∞ ‡§ï‡•á ‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‚Üí ‡§ï‡•á‡§µ‡§≤ Tomato___ ‡§∞‡•ã‡§ó ‡§ö‡•Å‡§®‡•á‡§Ç
- ‡§Ø‡§¶‡§ø ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§∏‡•á‡§¨ ‡§ï‡•á ‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‚Üí ‡§ï‡•á‡§µ‡§≤ Apple___ ‡§∞‡•ã‡§ó ‡§ö‡•Å‡§®‡•á‡§Ç
- ‡§∏‡§Æ‡§æ‡§® ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§™‡•å‡§ß‡•á ‡§ï‡•á ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•ã ‡§ó‡§≤‡§§ ‡§µ‡§∞‡•ç‡§ó‡•Ä‡§ï‡•É‡§§ ‡§® ‡§ï‡§∞‡•á‡§Ç
- ‡§π‡§Æ‡•á‡§∂‡§æ ‡§µ‡•á‡§¨ ‡§ñ‡•ã‡§ú ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§® ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§§‡§∞‡•ç‡§ï ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡•á‡§Ç

‡§Ö‡§™‡§®‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§®‡§ø‡§Æ‡•ç‡§®‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§∏‡§ñ‡•ç‡§§ JSON ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡•á‡§Ç (‡§ï‡•ã‡§à ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§¨‡§æ‡§°‡§º ‡§®‡§π‡•Ä‡§Ç, ‡§ï‡•ã‡§à ‡§Ö‡§®‡§æ‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§ï‡•â‡§Æ‡§æ ‡§®‡§π‡•Ä‡§Ç):
{{
    "isConfident": true | false,
    "highConfidenceResult": {{
        "diseaseName": "‡§∏‡•Ç‡§ö‡•Ä ‡§∏‡•á ‡§∏‡§ü‡•Ä‡§ï ‡§∞‡•ã‡§ó ‡§µ‡§∞‡•ç‡§ó ‡§∏‡•ç‡§ü‡•ç‡§∞‡§ø‡§Ç‡§ó (‡§Ø‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§µ‡§∞‡•ç‡§ó)",
        "description": "‡§∞‡•ã‡§ó ‡§ï‡§æ 1-2 ‡§µ‡§æ‡§ï‡•ç‡§Ø ‡§∏‡§∞‡§≤ ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ (‡§Ø‡§π ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à)",
        "cause": "‡§Ø‡§π ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§á‡§∏‡§ï‡§æ 1 ‡§∏‡§Ç‡§ï‡•ç‡§∑‡§ø‡§™‡•ç‡§§ ‡§µ‡§æ‡§ï‡•ç‡§Ø (‡§∞‡•ã‡§ó‡§ú‡§®‡§ï + ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤ ‡§™‡§∞‡§ø‡§∏‡•ç‡§•‡§ø‡§§‡§ø‡§Ø‡§æ‡§Ç; ‡§ú‡•à‡§∏‡•á '‡§†‡§Ç‡§°‡•á, ‡§ó‡•Ä‡§≤‡•á ‡§µ‡§∏‡§Ç‡§§ ‡§Æ‡•å‡§∏‡§Æ ‡§Æ‡•á‡§Ç ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤ ‡§´‡§Ç‡§ó‡§∏ ‡§µ‡•á‡§Ç‡§ü‡•Å‡§∞‡§ø‡§Ø‡§æ ‡§á‡§®‡§ø‡§ï‡•ç‡§µ‡•à‡§≤‡§ø‡§∏ ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à')",
        "confidenceScore": 0-100,
        "symptoms": ["‡§Ö‡§≤‡§ó ‡§¶‡§ø‡§ñ‡§æ‡§à ‡§¶‡•á‡§®‡•á ‡§µ‡§æ‡§≤‡§æ ‡§≤‡§ï‡•ç‡§∑‡§£ 1", "‡§≤‡§ï‡•ç‡§∑‡§£ 2", "‡§≤‡§ï‡•ç‡§∑‡§£ 3"],
        "organicTreatments": [
            {{"title": "‡§∏‡§Ç‡§ï‡•ç‡§∑‡§ø‡§™‡•ç‡§§ ‡§ú‡•à‡§µ‡§ø‡§ï ‡§µ‡§ø‡§ß‡§ø ‡§ï‡§æ ‡§®‡§æ‡§Æ", "description": "‡§ï‡§æ‡§∞‡•ç‡§∞‡§µ‡§æ‡§à + ‡§ï‡•à‡§∏‡•á/‡§ï‡§¨ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡•á‡§Ç"}},
            {{"title": "‡§è‡§ï ‡§î‡§∞ ‡§ú‡•à‡§µ‡§ø‡§ï ‡§µ‡§ø‡§ß‡§ø", "description": "‡§ï‡§æ‡§∞‡•ç‡§∞‡§µ‡§æ‡§à + ‡§ï‡•à‡§∏‡•á/‡§ï‡§¨ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡•á‡§Ç"}}
        ],
        "chemicalTreatments": [
            {{"activeIngredient": "AI ‡§ï‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§®‡§æ‡§Æ (‡§ú‡•à‡§∏‡•á ‡§ï‡•â‡§™‡§∞ ‡§π‡§æ‡§á‡§°‡•ç‡§∞‡•â‡§ï‡•ç‡§∏‡§æ‡§á‡§°)", "usage": "‡§ï‡§¨ ‡§î‡§∞ ‡§Ö‡§Ç‡§§‡§∞‡§æ‡§≤", "caution": "‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§Ø‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡•ã‡§ß ‡§®‡•ã‡§ü"}},
            {{"activeIngredient": "‡§¶‡•Ç‡§∏‡§∞‡§æ AI", "usage": "‡§ï‡§¨ ‡§î‡§∞ ‡§Ö‡§Ç‡§§‡§∞‡§æ‡§≤", "caution": "‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§Ø‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡•ã‡§ß ‡§®‡•ã‡§ü"}}
        ],
        "prevention": ["‡§®‡§ø‡§µ‡§æ‡§∞‡§ï ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ 1", "‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ 2", "‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ 3"],
        "indianBuyingLinks": [
            {{"category": "‡§ú‡•à‡§µ‡§ø‡§ï ‡§â‡§§‡•ç‡§™‡§æ‡§¶", "website": "‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§®‡§æ‡§Æ", "url": "https://website.com", "description": "‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§Ç‡§ï‡•ç‡§∑‡§ø‡§™‡•ç‡§§ ‡§µ‡§ø‡§µ‡§∞‡§£"}},
            {{"category": "‡§∞‡§æ‡§∏‡§æ‡§Ø‡§®‡§ø‡§ï ‡§´‡§´‡•Ç‡§Ç‡§¶‡•Ä‡§®‡§æ‡§∂‡§ï", "website": "‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§®‡§æ‡§Æ", "url": "https://website.com", "description": "‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§Ç‡§ï‡•ç‡§∑‡§ø‡§™‡•ç‡§§ ‡§µ‡§ø‡§µ‡§∞‡§£"}},
            {{"category": "‡§ï‡•É‡§∑‡§ø ‡§Ü‡§™‡•Ç‡§∞‡•ç‡§§‡§ø", "website": "‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§®‡§æ‡§Æ", "url": "https://website.com", "description": "‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§Ç‡§ï‡•ç‡§∑‡§ø‡§™‡•ç‡§§ ‡§µ‡§ø‡§µ‡§∞‡§£"}}
        ]
    }},
    "lowConfidenceResults": [
        {{"diseaseName": "‡§∏‡•Ç‡§ö‡•Ä ‡§∏‡•á ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§∞‡•ã‡§ó ‡§µ‡§∞‡•ç‡§ó", "preventionTips": "‡§¨‡§π‡•Å‡§§ ‡§õ‡•ã‡§ü‡§æ ‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ ‡§ü‡§ø‡§™"}},
        {{"diseaseName": "‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ", "preventionTips": "‡§¨‡§π‡•Å‡§§ ‡§õ‡•ã‡§ü‡§æ ‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ ‡§ü‡§ø‡§™"}},
        {{"diseaseName": "‡§§‡•Ä‡§∏‡§∞‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ", "preventionTips": "‡§¨‡§π‡•Å‡§§ ‡§õ‡•ã‡§ü‡§æ ‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ ‡§ü‡§ø‡§™"}}
    ]
}}

‡§®‡§ø‡§Ø‡§Æ:
- ‡§Ø‡§¶‡§ø ‡§µ‡§ø‡§∂‡•ç‡§µ‡§æ‡§∏ >= 70: isConfident=true ‡§î‡§∞ highConfidenceResult ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡•á‡§Ç, lowConfidenceResults ‡§ï‡•ã [] ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç ‡§Ø‡§æ ‡§õ‡•ã‡§°‡§º ‡§¶‡•á‡§Ç‡•§
- ‡§Ø‡§¶‡§ø ‡§µ‡§ø‡§∂‡•ç‡§µ‡§æ‡§∏ < 70: isConfident=false ‡§î‡§∞ 2-3 lowConfidenceResults ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡•á‡§Ç; highConfidenceResult ‡§ï‡•ã ‡§õ‡•ã‡§°‡§º‡•á‡§Ç ‡§Ø‡§æ null ‡§™‡§∞ ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç‡•§
- ‡§ú‡§¨ ‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡•ç‡§§ ‡§π‡•ã‡§Ç ‡§§‡§¨ organicTreatments ‡§î‡§∞ chemicalTreatments ‡§Æ‡•á‡§Ç ‡§†‡•Ä‡§ï 2 ‡§µ‡§∏‡•ç‡§§‡•Å‡§è‡§Å‡•§
- **‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£**: ‡§π‡§Æ‡•á‡§∂‡§æ "indianBuyingLinks" ‡§∏‡§∞‡§£‡•Ä ‡§ï‡•ã ‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤ 3 ‡§µ‡§∏‡•ç‡§§‡•Å‡§ì‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ï‡§∞‡•á‡§Ç - ‡§Ø‡§π ‡§Ö‡§®‡§ø‡§µ‡§æ‡§∞‡•ç‡§Ø ‡§π‡•à‡•§
- ‡§∏‡•Ç‡§ö‡•Ä ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§¶‡§ø‡§è ‡§ó‡§è ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§Ü‡§µ‡§ø‡§∑‡•ç‡§ï‡§æ‡§∞ ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§
- ‡§ï‡•á‡§µ‡§≤ ‡§∏‡§æ‡§¶‡§æ ‡§™‡§æ‡§† (‡§ï‡•ã‡§à ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§®‡§π‡•Ä‡§Ç) ‡§î‡§∞ ‡§ï‡•á‡§µ‡§≤ ‡§µ‡•à‡§ß JSON ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§
- ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§´‡§º‡•Ä‡§≤‡•ç‡§° ‡§ï‡•ã ‡§∏‡§Ç‡§ï‡•ç‡§∑‡§ø‡§™‡•ç‡§§ ‡§∞‡§ñ‡•á‡§Ç (‡§∏‡•ç‡§ü‡•ç‡§∞‡§ø‡§Ç‡§ó‡•ç‡§∏ ‡§ï‡•á ‡§≠‡•Ä‡§§‡§∞ ‡§®‡§à ‡§≤‡§æ‡§á‡§® ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç)‡•§
- **"indianBuyingLinks" ‡§´‡•Ä‡§≤‡•ç‡§° ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ ‡§Ö‡§ß‡•Ç‡§∞‡§æ ‡§â‡§§‡•ç‡§§‡§∞ ‡§Ö‡§∏‡•ç‡§µ‡•Ä‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§π‡•à**‡•§
‡§ï‡•á‡§µ‡§≤ JSON ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§Ç‡•§
"""

    if language == 'Hindi':
        return hindi_prompt
    return english_prompt